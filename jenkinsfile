pipeline {
    agent { label 'jenkins-agent' }

    tools {
        jdk 'java17'
        maven 'Maven3'
    }

    environment {
        APP_NAME = "feb02practice-pipeline"
        RELEASE = "1.0.0"
        DOCKER_USER = "hariharanbharatha"
        DOCKER_PASS = credentials('dockerhub-credentials')  // Use Jenkins credentials
        IMAGE_NAME = "${DOCKER_USER}/${APP_NAME}"
        IMAGE_TAG = "${RELEASE}-${env.BUILD_NUMBER}"
    }

    stages {
        stage("Cleanup Workspace") {
            steps {
                cleanWs()
            }
        }

        stage("Checkout from SCM") {
            steps {
                git branch: 'main', credentialsId: 'github', url: 'https://github.com/hariharanbharatha/feb02practice'
            }
        }

        stage("Build Application") {
            steps {
                sh "mvn clean package"
            }
        }

        stage("Test Application") {
            steps {
                sh "mvn test"
            }
        }

        stage("SonarQube Analysis") {
            steps {
                script {
                    withSonarQubeEnv(credentialsId: 'jenkins-sonarqube-token') { 
                        sh "mvn sonar:sonar"
                    }
                }
            }
        }

        stage("Quality Gate") {
            steps {
                script {
                    waitForQualityGate abortPipeline: false
                }	
            }
        }

    stage("Build & Push Docker Image") {
    steps {
        script {
            docker.withRegistry('', 'dockerhub') {
                docker_image = docker.build("${IMAGE_NAME}")
                docker_image.push("${IMAGE_TAG}")
                docker_image.push('latest')
               }
           }
         }
       }

    }
}
